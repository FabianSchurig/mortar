WORKING_DIR='/etc/mortar/'
PRIVATE_DIR="$WORKING_DIR/private/"

# Permission checks.
if [ "$UID" -ne "0" ]; then echo "Must be run as root."; exit 1; fi
mkdir -p "$PRIVATE_DIR"
chown root:root -R "$PRIVATE_DIR"
chmod go-rwx -R "$PRIVATE_DIR"
chmod go-rwx -R "$WORKING_DIR"
cd "$WORKING_DIR"

# Stage 1.
#TARGET_EFI='/efi/EFI/arch/grubx64.efi' #Script with append ".signed" to this file. Use it to boot.
EFI_DIR="/efi/EFI/" #Change this for your distro. This is where the .efi file will be placed. `mount | grep -i efi` may be helpful.
EFI_NAME="custom-mortarsecureboot-linux.efi"
TARGET_EFI="$EFI_DIR$EFI_NAME" #Script with append ".signed" to this file. Use it to boot.
hostname=$HOSTNAME
if [ -z $hostname ]; then hostname=$HOST; fi
KEY_UUID=
if [ -z $KEY_UUID ]; then KEY_UUID=$(uuidgen --random); sed -i -e "/KEY_UUID=/{s//KEY_UUID=$KEY_UUID/;:a" -e '$!N;$!ba' -e '}' $ENVFILE; fi
SECUREBOOT_MODIFIER="-mortarsecureboot-$hostname" #Added in the secureboot key generation CN to denote that they are yours.
SECUREBOOT_DB_KEY=$PRIVATE_DIR'db.key'
SECUREBOOT_DB_CRT=$PRIVATE_DIR'db.crt'

# Stage 2. 
SECUREBOOT_DB_AUTH=$PRIVATE_DIR'db.auth'
SECUREBOOT_DB_ESL=$PRIVATE_DIR'db.esl'
SECUREBOOT_PK_CRT=$PRIVATE_DIR'PK.crt'
SECUREBOOT_PK_ESL=$PRIVATE_DIR'PK.esl'
SECUREBOOT_PK_KEY=$PRIVATE_DIR'PK.key'
SECUREBOOT_PK_AUTH=$PRIVATE_DIR'PK.auth'
SECUREBOOT_KEK_CRT=$PRIVATE_DIR'KEK.crt'
SECUREBOOT_KEK_ESL=$PRIVATE_DIR'KEK.esl'
SECUREBOOT_KEK_AUTH=$PRIVATE_DIR'KEK.auth'
SECUREBOOT_KEK_KEY=$PRIVATE_DIR'KEK.key'

# Stage 4.
CRYPTDEV="/dev/nvme0n1p3" #LUKS Partition
CRYPTNAME="luks-disk" #Unlocked name (find in crypttab)
UUID="xxxxxxx-xxxxxxxx-xxxxxxxxx-xxxxxxxxxx" #OF THE KEYSLOT NOT THE DISK find with `luksmeta show -d /dev/nvmluks0p3` and check the slot uuid.
SLOT="1" #Keyslot number for clevis.
HEADERFILE="./luksheaderbackup.raw"
HEADERSHA256=
