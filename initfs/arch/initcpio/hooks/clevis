#!/usr/bin/bash
# Noah Bliss
# Initially based on a script by Shawn Rose <shawnandrewrose@gmail.com> found here: https://bbs.archlinux.org/viewtopic.php?id=230948


run_hook ()
{
    echo "Initializing... Please wait a few seconds for TPM validation of boot sequence."
    primary_function 
    #echo $! > /.clevis.pid
}

primary_function()
{
#sleep 3
echo "Measuring boot system integrity..."
CRYPTDEV= #LUKS Partition /dev/sda3
CRYPTNAME= #Unlocked name (find in crypttab)
SLOTUUID= #OF THE KEYSLOT NOT THE DISK find with `luksmeta show -d /dev/nvmluks0p2` and check the slot uuid. 
SLOT=1 #Keyslot number for clevis.
HEADERSHA256=
HEADERFILE="./luksheaderbackup.raw"

#until [ -f /.done ];
#do
	sleep 2
		### NEXT BLOCK IS FOR TESTING/DEBUG, REMOVE WHEN WORKING!
		#echo "luksmeta on the slot..."
		#luksmeta load -d "$CRYPTDEV" -s $SLOT -u $SLOTUUID
		#echo -e "\n\n"
		#echo "clevis decrypt attempt..."
		#luksmeta load -d "$CRYPTDEV" -s $SLOT -u $SLOTUUID | clevis decrypt
		#echo -e "\n\n"
		### REMOVE ABOVE FOR PROD.
		if [ -f "$HEADERFILE" ]; then rm "$HEADERFILE"; fi
		if (cryptsetup luksHeaderBackup "$CRYPTDEV" --header-backup-file "$HEADERFILE"); then
		    HEADERSHA256CUR=$(sha256sum "$HEADERFILE" | cut -f1 -d' ')
		    if [ "$HEADERSHA256" == "$HEADERSHA256CUR" ]; then
		        echo "HEADER VALIDATION SUCCEEDED."
		    else
		        echo "HEADER VALIDATION FAILED."
			echo "WAITING 10 SECONDS."
			echo "KILL SYSTEM NOW IF YOU DO NOT TRUST THIS HEADER."
			sleep 7
			echo "3..."
			sleep 1
			echo "2..."
			sleep 1
			echo "1..."
			sleep 1
		    fi
		    sleep 2		
		fi
		if (luksmeta load -d "$CRYPTDEV" -s $SLOT -u $SLOTUUID | clevis decrypt | cryptsetup luksOpen $CRYPTDEV $CRYPTNAME); then
	            echo -e "VALIDATION SUCCEEDED.\n\nI found $CRYPTNAME."
		    #killall cryptsetup #To terminate the original password prompt.
		    #touch /.done
		    sleep 2
	        else
		    echo "VALIDATION FAILED."
		    #bash #Terrible idea, let's try it.
		    sleep 3
		    #touch /.done
		fi
#done
#if [ -f /.clevis.pid ]; then rm /.clevis.pid; fi
}

run_cleanuphook ()
{
    if [ -f /.done ]; then rm /.done; fi
    if [ -f /.clevis.pid ]; then
        kill $(/.clevis.pid)
        rm /.clevis.pid
    fi
}
