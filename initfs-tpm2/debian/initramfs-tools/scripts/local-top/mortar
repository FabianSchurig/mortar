#!/bin/sh
# Noah Bliss
# Modified for github.com/noahbliss/mortar
# elements of this script inspired by https://github.com/latchset/clevis/blob/master/src/initramfs-tools/scripts/local-top/clevis.in as it existed on 1/14/2020


# THIS BLOCK IS DISABLED FOR NOW. See if we need it...
# This is a copy  of 'all_netbootable_devices/all_non_enslaved_devices' for
# platforms that might not provide it.
clevis_all_netbootable_devices() {
    for device in /sys/class/net/* ; do
            if [ ! -e "$device/flags" ]; then
                    continue
            fi

            loop=$(($(cat "$device/flags") & 0x8 && 1 || 0))
            bc=$(($(cat "$device/flags") & 0x2 && 1 || 0))
            ptp=$(($(cat "$device/flags") & 0x10 && 1 || 0))

            # Skip any device that is a loopback
            if [ $loop = 1 ]; then
                    continue
            fi

            # Skip any device that isn't a broadcast
            # or point-to-point.
            if [ $bc = 0 ] && [ $ptp = 0 ]; then
                    continue
            fi

            # Skip any enslaved device (has "master" link
            # attribute on it)
            device=$(basename "$device")
            ip -o link show "$device" | grep -q -w master && continue
            DEVICE="$DEVICE $device"
    done
    echo "$DEVICE"
}

# Check if network is up before trying to configure it.
eth_check() {
    for device in $(clevis_all_netbootable_devices); do
        ip link set dev "$device" up
        sleep 1
        ETH_HAS_CARRIER=$(cat /sys/class/net/"$device"/carrier)
        if [ "$ETH_HAS_CARRIER" = '1' ]; then
            return 0
        fi
    done
    return 1
}
#START DISABLED
#if eth_check; then
    # Make sure networking is set up: if booting via nfs, it already is
    # Doesn't seem to work when added to clevisloop for some reason
#    [ "$boot" = nfs ] || configure_networking
#fi

# Set the path how we want it (Probably not all needed)
#PATH="/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin"
#END DISABLED

mkdir -p /run/cryptsetup
echo "Initializing... Please wait a few seconds for TPM validation of boot sequence."
echo "Measuring boot system integrity..."
CRYPTDEV= #LUKS Partition /dev/sda3
CRYPTNAME= #Unlocked name (find in crypttab)
SLOTUUID= #OF THE KEYSLOT NOT THE DISK find with `luksmeta show -d /dev/nvmluks0p2` and check the slot uuid. 
SLOT= #Keyslot number for clevis.
HEADERSHA256=
HEADERFILE=
TOKENID=

# Test if the disk is already unlocked.
if [ -e /dev/mapper/"$CRYPTNAME" ]; then exit; fi
if ! [ -e "$CRYPTDEV" ]; then echo "Cannot find the crypto block device at $CRYPTDEV"; exit 1; fi
sleep 2

# Verify the LUKS header.
if [ -f "$HEADERFILE" ]; then rm "$HEADERFILE"; fi
if cryptsetup luksHeaderBackup "$CRYPTDEV" --header-backup-file "$HEADERFILE"; then
    HEADERSHA256CUR=`sha256sum "$HEADERFILE" | cut -f1 -d' '`
    if [ "$HEADERSHA256" == "$HEADERSHA256CUR" ]; then
        echo "HEADER VALIDATION SUCCEEDED."
    else
        echo "HEADER VALIDATION FAILED."
        echo "WAITING 10 SECONDS BEFORE CONTINUING."
        echo "KILL SYSTEM NOW IF YOU DO NOT TRUST THIS HEADER."
        sleep 7
        echo "3..."
        sleep 1
        echo "2..."
        sleep 1
        echo "1..."
        sleep 1
    fi
    sleep 2
fi

# Verify Secureboot and decrypt.

# If LUKS1
if cryptsetup isLuks --type luks1 "$CRYPTDEV"; then
	if luksmeta load -d "$CRYPTDEV" -s "$SLOT" -u "$SLOTUUID" | clevis decrypt | cryptsetup luksOpen "$CRYPTDEV" "$CRYPTNAME"; then
		RESULT="pass"
	else
		RESULT="fail"
	fi
fi

# If LUKS2
if cryptsetup isLuks --type luks2 "$CRYPTDEV"; then
	# jose jwe fmt -c outputs extra \n, so clean it up and pass to disk for unlocking.
	key=`cryptsetup token export --token-id "$TOKENID" "$CRYPTDEV" | jose fmt -j- -Og jwe -o- | jose jwe fmt -i- -c | tr -d '\n'`
	if echo -n "$key" | clevis decrypt | cryptsetup luksOpen "$CRYPTDEV" "$CRYPTNAME"; then
		RESULT="pass"
	else
		RESULT="fail"
        fi
fi

# Display Result
if [ "$RESULT" == "pass" ]; then
    echo -e "VALIDATION SUCCEEDED.\n\nI found $CRYPTNAME."
    sleep 2
else
    echo "TPM VALIDATION FAILED."
    sleep 3
fi

